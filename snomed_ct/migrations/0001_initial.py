# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-03 08:37
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunSQL("""
            drop table if exists sct2_concept cascade;
            create table sct2_concept(
              id bigint not null,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              definition_status_id bigint not null,
              CONSTRAINT sct2_concept_pkey PRIMARY KEY(id, effective_time, active)
            );

            drop table if exists sct2_description cascade;
            create table sct2_description(
              id bigint not null,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              concept_id bigint not null,
              language_code varchar(2) not null,
              type_id bigint not null,
              term varchar(255) not null,
              case_significance_id bigint not null,
              CONSTRAINT sct2_description_pkey PRIMARY KEY(id, effective_time, active)
            );

            drop table if exists sct2_text_definition cascade;
            create table sct2_text_definition(
              id bigint not null,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              concept_id bigint not null,
              language_code varchar(2) not null,
              type_id bigint not null,
              term varchar(1024) not null,
              case_significance_id bigint not null,
              CONSTRAINT sct2_textdefinition_pkey PRIMARY KEY(id, effective_time, active)
            );

            drop table if exists sct2_relationship cascade;
            create table sct2_relationship(
              id bigint not null,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              source_id bigint not null,
              destination_id bigint not null,
              relationship_group smallint not null,
              type_id bigint not null,
              characteristic_type_id bigint not null,
              modifier_id bigint not null,
              CONSTRAINT sct2_relationship_pkey PRIMARY KEY(id, effective_time, active)
            );

            drop table if exists sct2_stated_relationship cascade;
            create table sct2_stated_relationship(
              id bigint not null,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              source_id bigint not null,
              destination_id bigint not null,
              relationship_group smallint not null,
              type_id bigint not null,
              characteristic_type_id bigint not null,
              modifier_id bigint not null,
              CONSTRAINT sct2_stated_relationship_pkey PRIMARY KEY(id, effective_time, active)
            );

            drop table if exists sct2_lang_refset cascade;
            create table sct2_lang_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              acceptability_id bigint not null
            );

            drop table if exists sct2_association_refset cascade;
            create table sct2_association_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              target_component_id bigint not null
            );

            drop table if exists sct2_attribute_value_refset cascade;
            create table sct2_attribute_value_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              value_id bigint not null
            );

            drop table if exists sct2_simple_refset cascade;
            create table sct2_simple_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null
            );

            drop table if exists sct2_simple_map_refset cascade;
            create table sct2_simple_map_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              map_target text not null
            );

            drop table if exists sct2_complex_map_refset cascade;
            create table sct2_complex_map_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              map_group smallint not null,
              map_priority smallint not null,
              map_rule text,
              map_advice text,
              map_target text,
              correlation_id varchar(18) not null
            );

            drop table if exists sct2_extended_map_refset cascade;
            create table sct2_extended_map_refset(
              id uuid not null primary key,
              effective_time date not null,
              active boolean not null,
              module_id bigint not null,
              refset_id bigint not null,
              referenced_component_id bigint not null,
              map_group smallint not null,
              map_priority smallint not null,
              map_rule text,
              map_advice text,
              map_target text,
              correlation_id varchar(18),
              map_category_id varchar(18)
            );
        """, """
            drop table if exists sct2_concept cascade;
            drop table if exists sct2_description cascade;
            drop table if exists sct2_text_definition cascade;
            drop table if exists sct2_relationship cascade;
            drop table if exists sct2_stated_relationship cascade;
            drop table if exists sct2_lang_refset cascade;
            drop table if exists sct2_association_refset cascade;
            drop table if exists sct2_attribute_value_refset cascade;
            drop table if exists sct2_simple_refset cascade;
            drop table if exists sct2_simple_map_refset cascade;
            drop table if exists sct2_complex_map_refset cascade;
            drop table if exists sct2_extended_map_refset cascade;
        """)
    ]
