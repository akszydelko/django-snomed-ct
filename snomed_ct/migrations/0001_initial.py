# Generated by Django 3.2.13 on 2023-03-17 14:50

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('definition_status', models.ForeignKey(choices=[(900000000000074008, 'Primitive'), (900000000000073002, 'Defined')], db_column='definitionStatusId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_concept',
            },
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('language_code', models.CharField(db_column='languageCode', max_length=2)),
                ('term', models.TextField(db_index=True)),
                ('case_significance', models.ForeignKey(choices=[(900000000000020002, 'Initial character case insensitive'), (900000000000017005, 'Case sensitive')], db_column='caseSignificanceId', db_index=False, on_delete=django.db.models.deletion.PROTECT, to='snomed_ct.concept')),
                ('concept', models.ForeignKey(db_column='conceptId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='descriptions', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='module_descriptions', to='snomed_ct.concept')),
                ('type', models.ForeignKey(choices=[(900000000000003001, 'Fully specified name'), (900000000000013009, 'Synonym')], db_column='typeId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='type_descriptions', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_description',
            },
        ),
        migrations.CreateModel(
            name='TransitiveClosure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitive_isa', to='snomed_ct.concept')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitive_subsumes', to='snomed_ct.concept')),
            ],
        ),
        migrations.CreateModel(
            name='TextDefinition',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('language_code', models.CharField(db_column='languageCode', max_length=3)),
                ('term', models.TextField(db_index=True)),
                ('case_significance', models.ForeignKey(choices=[(900000000000020002, 'Initial character case insensitive'), (900000000000017005, 'Case sensitive')], db_column='caseSignificanceId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('concept', models.ForeignKey(db_column='conceptId', on_delete=django.db.models.deletion.PROTECT, related_name='text_definitions', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('type', models.ForeignKey(choices=[], db_column='typeId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_text_definition',
            },
        ),
        migrations.CreateModel(
            name='SimpleRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_simple_refset',
            },
        ),
        migrations.CreateModel(
            name='SimpleMapRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('map_target', models.TextField()),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_simple_map_refset',
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('relationship_group', models.SmallIntegerField(db_column='relationshipGroup')),
                ('characteristic_type', models.ForeignKey(choices=[(900000000000011006, 'Inferred relationship'), (900000000000227009, 'Additional relationship')], db_column='characteristicTypeId', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('destination', models.ForeignKey(db_column='destinationId', on_delete=django.db.models.deletion.PROTECT, related_name='destination_relationships', to='snomed_ct.concept')),
                ('modifier', models.ForeignKey(db_column='modifierId', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('source', models.ForeignKey(db_column='sourceId', on_delete=django.db.models.deletion.PROTECT, related_name='source_relationships', to='snomed_ct.concept')),
                ('type', models.ForeignKey(choices=[], db_column='typeId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_relationship',
            },
        ),
        migrations.CreateModel(
            name='LangRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('acceptability', models.ForeignKey(choices=[(900000000000548007, 'Preferred'), (900000000000549004, 'Acceptable')], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lang_refset', to='snomed_ct.description')),
                ('refset', models.ForeignKey(choices=[(900000000000509007, 'US English'), (900000000000508004, 'GB English')], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_lang_refset',
            },
        ),
        migrations.CreateModel(
            name='ICD10_Mapping',
            fields=[
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('map_group', models.SmallIntegerField(db_column='mapGroup')),
                ('map_priority', models.SmallIntegerField(db_column='mapPriority')),
                ('map_rule', models.TextField(blank=True, db_column='mapRule', null=True)),
                ('map_advice', models.TextField(blank=True, db_column='mapAdvice', null=True)),
                ('map_target', models.TextField(blank=True, db_column='mapTarget', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('referenced_component_name', models.TextField(blank=True, db_column='referencedComponentName', null=True)),
                ('map_target_name', models.TextField(blank=True, db_column='mapTargetName', db_index=True, null=True)),
                ('map_category_name', models.TextField(blank=True, db_column='mapCategoryName', null=True)),
                ('correlation', models.ForeignKey(blank=True, db_column='correlationId', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('map_category', models.ForeignKey(blank=True, db_column='mapCategoryId', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(db_column='referencedComponentId', on_delete=django.db.models.deletion.PROTECT, related_name='icd10_mappings', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(db_column='refsetId', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'icd10_snomed_ct',
            },
        ),
        migrations.CreateModel(
            name='ComplexMapRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('map_group', models.SmallIntegerField()),
                ('map_priority', models.SmallIntegerField()),
                ('map_rule', models.TextField(blank=True, null=True)),
                ('map_advice', models.TextField(blank=True, null=True)),
                ('map_target', models.TextField(blank=True, null=True)),
                ('correlation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_complex_map_refset',
            },
        ),
        migrations.CreateModel(
            name='AttributeValueRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_attribute_value_refset',
            },
        ),
        migrations.CreateModel(
            name='AssociationRefSet',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('effective_time', models.DateField(db_column='effectiveTime')),
                ('active', models.BooleanField()),
                ('module', models.ForeignKey(db_column='moduleId', db_index=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('referenced_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('refset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('target_component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'sct2_association_refset',
            },
        ),
        migrations.CreateModel(
            name='TermBasedView',
            fields=[
                ('lang_refset_refset', models.ForeignKey(choices=[(900000000000509007, 'US English'), (900000000000508004, 'GB English')], on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='+', serialize=False, to='snomed_ct.concept')),
                ('description_language_code', models.CharField(max_length=2)),
                ('description_term', models.CharField(max_length=255)),
                ('concpet_active', models.BooleanField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('concpet_definition_status', models.ForeignKey(choices=[(900000000000074008, 'Primitive'), (900000000000073002, 'Defined')], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.description')),
                ('description_case_significance', models.ForeignKey(choices=[(900000000000020002, 'Initial character case insensitive'), (900000000000017005, 'Case sensitive')], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('description_type', models.ForeignKey(choices=[], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
                ('lang_refset_acceptability', models.ForeignKey(choices=[(900000000000548007, 'Preferred'), (900000000000549004, 'Acceptable')], on_delete=django.db.models.deletion.PROTECT, related_name='+', to='snomed_ct.concept')),
            ],
            options={
                'db_table': 'terms_based_view',
            },
        ),
    ]
